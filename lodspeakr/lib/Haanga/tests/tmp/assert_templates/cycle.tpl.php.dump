Array
(
    [0] => Array
        (
            [op] => declare
            [name] => HAANGA_VERSION
            [0] => Array
                (
                    [string] => 1.0.4
                )

        )

    [1] => Array
        (
            [op] => comment
            [comment] => Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/cycle.tpl
        )

    [2] => Array
        (
            [op] => function
            [name] => haanga_ce9ab0a21d381cdfd181f6d4b9c01a720d4c7320
        )

    [3] => Array
        (
            [op] => global
            [vars] => Array
                (
                    [0] => test_global
                    [1] => global1
                )

        )

    [4] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => extract
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => vars
                                )

                        )

                )

        )

    [5] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [6] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => ob_start
                    [args] => Array
                        (
                        )

                )

        )

    [7] => Array
        (
            [op] => end_if
        )

    [8] => Array
        (
            [op] => foreach
            [array] => array
            [value] => user
        )

    [9] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [10] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [exec] => isset
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => def_cycle_0
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [expr] => 
                        )

                )

        )

    [11] => Array
        (
            [op] => declare
            [name] => def_cycle_0
            [0] => Array
                (
                    [array] => Array
                        (
                            [0] => Array
                                (
                                    [string] => uno
                                )

                            [1] => Array
                                (
                                    [string] => dos
                                )

                            [2] => Array
                                (
                                    [string] => tres
                                )

                        )

                )

        )

    [12] => Array
        (
            [op] => end_if
        )

    [13] => Array
        (
            [op] => declare
            [name] => index_0
            [0] => Array
                (
                    [expr_cond] => Array
                        (
                            [op_expr] => ==
                            [0] => Array
                                (
                                    [exec] => isset
                                    [args] => Array
                                        (
                                            [0] => Array
                                                (
                                                    [var] => index_0
                                                )

                                        )

                                )

                            [1] => Array
                                (
                                    [expr] => 
                                )

                        )

                    [true] => Array
                        (
                            [number] => 0
                        )

                    [false] => Array
                        (
                            [op_expr] => %
                            [0] => Array
                                (
                                    [op_expr] => expr
                                    [0] => Array
                                        (
                                            [op_expr] => +
                                            [0] => Array
                                                (
                                                    [var] => index_0
                                                )

                                            [1] => Array
                                                (
                                                    [number] => 1
                                                )

                                        )

                                    [1] => 
                                )

                            [1] => Array
                                (
                                    [exec] => count
                                    [args] => Array
                                        (
                                            [0] => Array
                                                (
                                                    [var] => def_cycle_0
                                                )

                                        )

                                )

                        )

                )

        )

    [14] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => Array
                        (
                            [0] => def_cycle_0
                            [1] => Array
                                (
                                    [var] => index_0
                                )

                        )

                )

        )

    [15] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [16] => Array
        (
            [op] => end_foreach
        )

    [17] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
-----------------------------------------------

                )

        )

    [18] => Array
        (
            [op] => declare
            [name] => def_cycle_1
            [0] => Array
                (
                    [array] => Array
                        (
                            [0] => Array
                                (
                                    [string] => uno
                                )

                            [1] => Array
                                (
                                    [string] => dos
                                )

                            [2] => Array
                                (
                                    [string] => tres
                                )

                        )

                )

        )

    [19] => Array
        (
            [op] => declare
            [name] => index_1
            [0] => Array
                (
                    [number] => -1
                )

        )

    [20] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [21] => Array
        (
            [op] => declare
            [name] => index_1
            [0] => Array
                (
                    [op_expr] => %
                    [0] => Array
                        (
                            [op_expr] => expr
                            [0] => Array
                                (
                                    [op_expr] => +
                                    [0] => Array
                                        (
                                            [var] => index_1
                                        )

                                    [1] => Array
                                        (
                                            [number] => 1
                                        )

                                )

                            [1] => 
                        )

                    [1] => Array
                        (
                            [exec] => count
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => def_cycle_1
                                        )

                                )

                        )

                )

        )

    [22] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => Array
                        (
                            [0] => def_cycle_1
                            [1] => Array
                                (
                                    [var] => index_1
                                )

                        )

                )

        )

    [23] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [24] => Array
        (
            [op] => declare
            [name] => index_1
            [0] => Array
                (
                    [op_expr] => %
                    [0] => Array
                        (
                            [op_expr] => expr
                            [0] => Array
                                (
                                    [op_expr] => +
                                    [0] => Array
                                        (
                                            [var] => index_1
                                        )

                                    [1] => Array
                                        (
                                            [number] => 1
                                        )

                                )

                            [1] => 
                        )

                    [1] => Array
                        (
                            [exec] => count
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => def_cycle_1
                                        )

                                )

                        )

                )

        )

    [25] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => Array
                        (
                            [0] => def_cycle_1
                            [1] => Array
                                (
                                    [var] => index_1
                                )

                        )

                )

        )

    [26] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [27] => Array
        (
            [op] => declare
            [name] => index_1
            [0] => Array
                (
                    [op_expr] => %
                    [0] => Array
                        (
                            [op_expr] => expr
                            [0] => Array
                                (
                                    [op_expr] => +
                                    [0] => Array
                                        (
                                            [var] => index_1
                                        )

                                    [1] => Array
                                        (
                                            [number] => 1
                                        )

                                )

                            [1] => 
                        )

                    [1] => Array
                        (
                            [exec] => count
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => def_cycle_1
                                        )

                                )

                        )

                )

        )

    [28] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => Array
                        (
                            [0] => def_cycle_1
                            [1] => Array
                                (
                                    [var] => index_1
                                )

                        )

                )

        )

    [29] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [30] => Array
        (
            [op] => declare
            [name] => index_1
            [0] => Array
                (
                    [op_expr] => %
                    [0] => Array
                        (
                            [op_expr] => expr
                            [0] => Array
                                (
                                    [op_expr] => +
                                    [0] => Array
                                        (
                                            [var] => index_1
                                        )

                                    [1] => Array
                                        (
                                            [number] => 1
                                        )

                                )

                            [1] => 
                        )

                    [1] => Array
                        (
                            [exec] => count
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => def_cycle_1
                                        )

                                )

                        )

                )

        )

    [31] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => Array
                        (
                            [0] => def_cycle_1
                            [1] => Array
                                (
                                    [var] => index_1
                                )

                        )

                )

        )

    [32] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [33] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [34] => Array
        (
            [op] => return
            [0] => Array
                (
                    [exec] => ob_get_clean
                    [args] => Array
                        (
                        )

                )

        )

    [35] => Array
        (
            [op] => end_if
        )

    [36] => Array
        (
            [op] => end_function
        )

    [php] => 
$HAANGA_VERSION  = '1.0.4';
/* Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/cycle.tpl */
function haanga_ce9ab0a21d381cdfd181f6d4b9c01a720d4c7320($vars, $return=FALSE, $blocks=array())
{
    global $test_global, $global1;
    extract($vars);
    if ($return == TRUE) {
        ob_start();
    }
    foreach ($array as  $user) {
        echo '
    ';
        if (isset($def_cycle_0) == FALSE) {
            $def_cycle_0  = Array('uno', 'dos', 'tres');
        }
        $index_0  = (isset($index_0) == FALSE ? 0 : (($index_0 + 1) % count($def_cycle_0)));
        echo $def_cycle_0[$index_0].'
';
    }
    echo '
-----------------------------------------------
';
    $def_cycle_1  = Array('uno', 'dos', 'tres');
    $index_1  = -1;
    echo '
';
    $index_1  = (($index_1 + 1) % count($def_cycle_1));
    echo $def_cycle_1[$index_1].'
';
    $index_1  = (($index_1 + 1) % count($def_cycle_1));
    echo $def_cycle_1[$index_1].'
';
    $index_1  = (($index_1 + 1) % count($def_cycle_1));
    echo $def_cycle_1[$index_1].'
';
    $index_1  = (($index_1 + 1) % count($def_cycle_1));
    echo $def_cycle_1[$index_1].'
';
    if ($return == TRUE) {
        return ob_get_clean();
    }
}
)
