Array
(
    [0] => Array
        (
            [op] => declare
            [name] => HAANGA_VERSION
            [0] => Array
                (
                    [string] => 1.0.4
                )

        )

    [1] => Array
        (
            [op] => comment
            [comment] => Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/empty_loop.tpl
        )

    [2] => Array
        (
            [op] => function
            [name] => haanga_b81b868120adb871819ede8f37c652aea054b73d
        )

    [3] => Array
        (
            [op] => global
            [vars] => Array
                (
                    [0] => test_global
                    [1] => global1
                )

        )

    [4] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => extract
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => vars
                                )

                        )

                )

        )

    [5] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [6] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => ob_start
                    [args] => Array
                        (
                        )

                )

        )

    [7] => Array
        (
            [op] => end_if
        )

    [8] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [exec] => count
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => Array
                                                (
                                                    [0] => users
                                                )

                                        )

                                )

                        )

                    [1] => Array
                        (
                            [number] => 0
                        )

                )

        )

    [9] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    Else

                )

        )

    [10] => Array
        (
            [op] => else
        )

    [11] => Array
        (
            [op] => declare
            [name] => forcounter1_1
            [0] => Array
                (
                    [number] => 1
                )

        )

    [12] => Array
        (
            [op] => declare
            [name] => forcounter0_1
            [0] => Array
                (
                    [number] => 0
                )

        )

    [13] => Array
        (
            [op] => declare
            [name] => psize_1
            [0] => Array
                (
                    [exec] => count
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => users
                                )

                        )

                )

        )

    [14] => Array
        (
            [op] => declare
            [name] => islast_1
            [0] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [var] => psize_1
                        )

                )

        )

    [15] => Array
        (
            [op] => foreach
            [array] => users
            [value] => user
            [key] => id
        )

    [16] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [17] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => islast_1
                )

        )

    [18] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [19] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => forcounter0_1
                )

        )

    [20] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    Inside loop

                )

        )

    [21] => Array
        (
            [op] => declare
            [name] => forcounter1_1
            [0] => Array
                (
                    [op_expr] => +
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [22] => Array
        (
            [op] => declare
            [name] => forcounter0_1
            [0] => Array
                (
                    [op_expr] => +
                    [0] => Array
                        (
                            [var] => forcounter0_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [23] => Array
        (
            [op] => declare
            [name] => islast_1
            [0] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [var] => psize_1
                        )

                )

        )

    [24] => Array
        (
            [op] => end_foreach
        )

    [25] => Array
        (
            [op] => end_if
        )

    [26] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [27] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [28] => Array
        (
            [op] => return
            [0] => Array
                (
                    [exec] => ob_get_clean
                    [args] => Array
                        (
                        )

                )

        )

    [29] => Array
        (
            [op] => end_if
        )

    [30] => Array
        (
            [op] => end_function
        )

    [php] => 
$HAANGA_VERSION  = '1.0.4';
/* Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/empty_loop.tpl */
function haanga_b81b868120adb871819ede8f37c652aea054b73d($vars, $return=FALSE, $blocks=array())
{
    global $test_global, $global1;
    extract($vars);
    if ($return == TRUE) {
        ob_start();
    }
    if (count($users) == 0) {
        echo '
    Else
';
    } else {
        $forcounter1_1  = 1;
        $forcounter0_1  = 0;
        $psize_1  = count($users);
        $islast_1  = ($forcounter1_1 == $psize_1);
        foreach ($users as  $id => $user) {
            echo '
    '.$islast_1.'
    '.$forcounter0_1.'
    Inside loop
';
            $forcounter1_1  = ($forcounter1_1 + 1);
            $forcounter0_1  = ($forcounter0_1 + 1);
            $islast_1  = ($forcounter1_1 == $psize_1);
        }
    }
    echo '
';
    if ($return == TRUE) {
        return ob_get_clean();
    }
}
)
