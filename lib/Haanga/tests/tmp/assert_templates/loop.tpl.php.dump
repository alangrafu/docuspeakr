Array
(
    [0] => Array
        (
            [op] => declare
            [name] => HAANGA_VERSION
            [0] => Array
                (
                    [string] => 1.0.4
                )

        )

    [1] => Array
        (
            [op] => comment
            [comment] => Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/loop.tpl
        )

    [2] => Array
        (
            [op] => function
            [name] => haanga_4726e18009acee8a1c86a79b620c7ded71be5ddf
        )

    [3] => Array
        (
            [op] => global
            [vars] => Array
                (
                    [0] => test_global
                    [1] => global1
                )

        )

    [4] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => extract
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => vars
                                )

                        )

                )

        )

    [5] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [6] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => ob_start
                    [args] => Array
                        (
                        )

                )

        )

    [7] => Array
        (
            [op] => end_if
        )

    [8] => Array
        (
            [op] => declare
            [name] => psize_1
            [0] => Array
                (
                    [exec] => count
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => array
                                )

                        )

                )

        )

    [9] => Array
        (
            [op] => declare
            [name] => revcount0_1
            [0] => Array
                (
                    [op_expr] => -
                    [0] => Array
                        (
                            [var] => psize_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [10] => Array
        (
            [op] => foreach
            [array] => array
            [value] => i
        )

    [11] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [12] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => revcount0_1
                )

        )

    [13] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [14] => Array
        (
            [op] => declare
            [name] => revcount0_1
            [0] => Array
                (
                    [op_expr] => -
                    [0] => Array
                        (
                            [var] => revcount0_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [15] => Array
        (
            [op] => end_foreach
        )

    [16] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 


                )

        )

    [17] => Array
        (
            [op] => declare
            [name] => psize_1
            [0] => Array
                (
                    [exec] => count
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => array
                                )

                        )

                )

        )

    [18] => Array
        (
            [op] => declare
            [name] => revcount_1
            [0] => Array
                (
                    [var] => psize_1
                )

        )

    [19] => Array
        (
            [op] => foreach
            [array] => array
            [value] => i
        )

    [20] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [21] => Array
        (
            [op] => print
            [0] => Array
                (
                    [var] => revcount_1
                )

        )

    [22] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [23] => Array
        (
            [op] => declare
            [name] => revcount_1
            [0] => Array
                (
                    [op_expr] => -
                    [0] => Array
                        (
                            [var] => revcount_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [24] => Array
        (
            [op] => end_foreach
        )

    [25] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 


                )

        )

    [26] => Array
        (
            [op] => declare
            [name] => forcounter1_1
            [0] => Array
                (
                    [number] => 1
                )

        )

    [27] => Array
        (
            [op] => declare
            [name] => psize_1
            [0] => Array
                (
                    [exec] => count
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => array
                                )

                        )

                )

        )

    [28] => Array
        (
            [op] => declare
            [name] => islast_1
            [0] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [var] => psize_1
                        )

                )

        )

    [29] => Array
        (
            [op] => foreach
            [array] => array
            [value] => i
        )

    [30] => Array
        (
            [op] => declare
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
                )

        )

    [31] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [32] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ===
                    [0] => Array
                        (
                            [exec] => empty
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => islast_1
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [expr] => 
                        )

                )

        )

    [33] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] =>  Last 
                )

        )

    [34] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [exec] => htmlspecialchars
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => i
                                )

                        )

                )

        )

    [35] => Array
        (
            [op] => end_if
        )

    [36] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 


                )

        )

    [37] => Array
        (
            [op] => print
            [0] => Array
                (
                    [exec] => trim
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => buffer1
                                )

                        )

                )

        )

    [38] => Array
        (
            [op] => declare
            [name] => forcounter1_1
            [0] => Array
                (
                    [op_expr] => +
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [39] => Array
        (
            [op] => declare
            [name] => islast_1
            [0] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [var] => psize_1
                        )

                )

        )

    [40] => Array
        (
            [op] => end_foreach
        )

    [41] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 


                )

        )

    [42] => Array
        (
            [op] => declare
            [name] => forcounter1_1
            [0] => Array
                (
                    [number] => 1
                )

        )

    [43] => Array
        (
            [op] => declare
            [name] => psize_1
            [0] => Array
                (
                    [exec] => count
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => array_nested
                                )

                        )

                )

        )

    [44] => Array
        (
            [op] => declare
            [name] => islast_1
            [0] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [var] => psize_1
                        )

                )

        )

    [45] => Array
        (
            [op] => foreach
            [array] => array_nested
            [value] => sub
            [key] => k
        )

    [46] => Array
        (
            [op] => declare
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
                )

        )

    [47] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 

    
                )

        )

    [48] => Array
        (
            [op] => foreach
            [array] => sub
            [value] => arr
        )

    [49] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
        
                )

        )

    [50] => Array
        (
            [op] => foreach
            [array] => arr
            [value] => val
        )

    [51] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
            
                )

        )

    [52] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ===
                    [0] => Array
                        (
                            [exec] => empty
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => islast_1
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [expr] => 
                        )

                )

        )

    [53] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] =>  Last 
                )

        )

    [54] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [exec] => htmlspecialchars
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => k
                                )

                        )

                )

        )

    [55] => Array
        (
            [op] => end_if
        )

    [56] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
        
                )

        )

    [57] => Array
        (
            [op] => end_foreach
        )

    [58] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [59] => Array
        (
            [op] => end_foreach
        )

    [60] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 


                )

        )

    [61] => Array
        (
            [op] => print
            [0] => Array
                (
                    [exec] => trim
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => buffer1
                                )

                        )

                )

        )

    [62] => Array
        (
            [op] => declare
            [name] => forcounter1_1
            [0] => Array
                (
                    [op_expr] => +
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [number] => 1
                        )

                )

        )

    [63] => Array
        (
            [op] => declare
            [name] => islast_1
            [0] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => forcounter1_1
                        )

                    [1] => Array
                        (
                            [var] => psize_1
                        )

                )

        )

    [64] => Array
        (
            [op] => end_foreach
        )

    [65] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 


                )

        )

    [66] => Array
        (
            [op] => declare
            [name] => isfirst_1
            [0] => Array
                (
                    [expr] => 1
                )

        )

    [67] => Array
        (
            [op] => foreach
            [array] => array_nested
            [value] => sub
            [key] => k
        )

    [68] => Array
        (
            [op] => declare
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
                )

        )

    [69] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 

    
                )

        )

    [70] => Array
        (
            [op] => foreach
            [array] => sub
            [value] => arr
        )

    [71] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
        
                )

        )

    [72] => Array
        (
            [op] => foreach
            [array] => arr
            [value] => val
        )

    [73] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
            
                )

        )

    [74] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ===
                    [0] => Array
                        (
                            [exec] => empty
                            [args] => Array
                                (
                                    [0] => Array
                                        (
                                            [var] => isfirst_1
                                        )

                                )

                        )

                    [1] => Array
                        (
                            [expr] => 
                        )

                )

        )

    [75] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] =>  first 
                )

        )

    [76] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [exec] => htmlspecialchars
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => k
                                )

                        )

                )

        )

    [77] => Array
        (
            [op] => end_if
        )

    [78] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
        
                )

        )

    [79] => Array
        (
            [op] => end_foreach
        )

    [80] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 
    
                )

        )

    [81] => Array
        (
            [op] => end_foreach
        )

    [82] => Array
        (
            [op] => append_var
            [name] => buffer1
            [0] => Array
                (
                    [string] => 


                )

        )

    [83] => Array
        (
            [op] => print
            [0] => Array
                (
                    [exec] => trim
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => buffer1
                                )

                        )

                )

        )

    [84] => Array
        (
            [op] => declare
            [name] => isfirst_1
            [0] => Array
                (
                    [expr] => 
                )

        )

    [85] => Array
        (
            [op] => end_foreach
        )

    [86] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [87] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [88] => Array
        (
            [op] => return
            [0] => Array
                (
                    [exec] => ob_get_clean
                    [args] => Array
                        (
                        )

                )

        )

    [89] => Array
        (
            [op] => end_if
        )

    [90] => Array
        (
            [op] => end_function
        )

    [php] => 
$HAANGA_VERSION  = '1.0.4';
/* Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/loop.tpl */
function haanga_4726e18009acee8a1c86a79b620c7ded71be5ddf($vars, $return=FALSE, $blocks=array())
{
    global $test_global, $global1;
    extract($vars);
    if ($return == TRUE) {
        ob_start();
    }
    $psize_1  = count($array);
    $revcount0_1  = ($psize_1 - 1);
    foreach ($array as  $i) {
        echo '
    '.$revcount0_1.'
';
        $revcount0_1  = ($revcount0_1 - 1);
    }
    echo '

';
    $psize_1  = count($array);
    $revcount_1  = $psize_1;
    foreach ($array as  $i) {
        echo '
    '.$revcount_1.'
';
        $revcount_1  = ($revcount_1 - 1);
    }
    echo '

';
    $forcounter1_1  = 1;
    $psize_1  = count($array);
    $islast_1  = ($forcounter1_1 == $psize_1);
    foreach ($array as  $i) {
        $buffer1  = '
    ';
        if (empty($islast_1) === FALSE) {
            $buffer1 .= ' Last '.htmlspecialchars($i);
        }
        $buffer1 .= '

';
        echo trim($buffer1);
        $forcounter1_1  = ($forcounter1_1 + 1);
        $islast_1  = ($forcounter1_1 == $psize_1);
    }
    echo '

';
    $forcounter1_1  = 1;
    $psize_1  = count($array_nested);
    $islast_1  = ($forcounter1_1 == $psize_1);
    foreach ($array_nested as  $k => $sub) {
        $buffer1  = '

    ';
        foreach ($sub as  $arr) {
            $buffer1 .= '
        ';
            foreach ($arr as  $val) {
                $buffer1 .= '
            ';
                if (empty($islast_1) === FALSE) {
                    $buffer1 .= ' Last '.htmlspecialchars($k);
                }
                $buffer1 .= '
        ';
            }
            $buffer1 .= '
    ';
        }
        $buffer1 .= '

';
        echo trim($buffer1);
        $forcounter1_1  = ($forcounter1_1 + 1);
        $islast_1  = ($forcounter1_1 == $psize_1);
    }
    echo '

';
    $isfirst_1  = TRUE;
    foreach ($array_nested as  $k => $sub) {
        $buffer1  = '

    ';
        foreach ($sub as  $arr) {
            $buffer1 .= '
        ';
            foreach ($arr as  $val) {
                $buffer1 .= '
            ';
                if (empty($isfirst_1) === FALSE) {
                    $buffer1 .= ' first '.htmlspecialchars($k);
                }
                $buffer1 .= '
        ';
            }
            $buffer1 .= '
    ';
        }
        $buffer1 .= '

';
        echo trim($buffer1);
        $isfirst_1  = FALSE;
    }
    echo '
';
    if ($return == TRUE) {
        return ob_get_clean();
    }
}
)
