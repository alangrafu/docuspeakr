Array
(
    [0] => Array
        (
            [op] => declare
            [name] => HAANGA_VERSION
            [0] => Array
                (
                    [string] => 1.0.4
                )

        )

    [1] => Array
        (
            [op] => comment
            [comment] => Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/templatetag.tpl
        )

    [2] => Array
        (
            [op] => function
            [name] => haanga_e8adad36286908587f35889b124b818b834c1e4f
        )

    [3] => Array
        (
            [op] => global
            [vars] => Array
                (
                    [0] => test_global
                    [1] => global1
                )

        )

    [4] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => extract
                    [args] => Array
                        (
                            [0] => Array
                                (
                                    [var] => vars
                                )

                        )

                )

        )

    [5] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [6] => Array
        (
            [op] => expr
            [0] => Array
                (
                    [exec] => ob_start
                    [args] => Array
                        (
                        )

                )

        )

    [7] => Array
        (
            [op] => end_if
        )

    [8] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => {%
                )

        )

    [9] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => foo
                )

        )

    [10] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => %}
                )

        )

    [11] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [12] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => {%
                )

        )

    [13] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => foo
                )

        )

    [14] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => %}
                )

        )

    [15] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [16] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => {{
                )

        )

    [17] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => foo
                )

        )

    [18] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => }}
                )

        )

    [19] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [20] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => {
                )

        )

    [21] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => foo
                )

        )

    [22] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => }
                )

        )

    [23] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [24] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => {#
                )

        )

    [25] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => foo
                )

        )

    [26] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => #}
                )

        )

    [27] => Array
        (
            [op] => print
            [0] => Array
                (
                    [string] => 

                )

        )

    [28] => Array
        (
            [op] => if
            [expr] => Array
                (
                    [op_expr] => ==
                    [0] => Array
                        (
                            [var] => return
                        )

                    [1] => Array
                        (
                            [expr] => 1
                        )

                )

        )

    [29] => Array
        (
            [op] => return
            [0] => Array
                (
                    [exec] => ob_get_clean
                    [args] => Array
                        (
                        )

                )

        )

    [30] => Array
        (
            [op] => end_if
        )

    [31] => Array
        (
            [op] => end_function
        )

    [php] => 
$HAANGA_VERSION  = '1.0.4';
/* Generated from /home/crodas/projects/playground/haanga/tests/assert_templates/templatetag.tpl */
function haanga_e8adad36286908587f35889b124b818b834c1e4f($vars, $return=FALSE, $blocks=array())
{
    global $test_global, $global1;
    extract($vars);
    if ($return == TRUE) {
        ob_start();
    }
    echo '{%foo%}
{%foo%}
{{foo}}
{foo}
{#foo#}
';
    if ($return == TRUE) {
        return ob_get_clean();
    }
}
)
